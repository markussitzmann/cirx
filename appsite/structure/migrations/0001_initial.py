# Generated by Django 4.0.2 on 2022-04-16 20:57

import custom.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('resolver', '0001_initial'),
        ('etl', '0001_initial'),
        ('database', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'cir_access_client',
            },
        ),
        migrations.CreateModel(
            name='AccessHost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string', models.CharField(max_length=255, unique=True)),
                ('blocked', models.IntegerField()),
                ('lock_timestamp', models.DateTimeField(db_column='lock_time')),
                ('current_sleep_period', models.IntegerField()),
                ('force_sleep_period', models.IntegerField()),
                ('force_block', models.IntegerField()),
            ],
            options={
                'db_table': 'cir_access_host',
            },
        ),
        migrations.CreateModel(
            name='AccessOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'cir_access_organization',
            },
        ),
        migrations.CreateModel(
            name='AssociationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string', models.CharField(max_length=48)),
                ('property', models.CharField(max_length=48)),
                ('display_name', models.CharField(max_length=48)),
            ],
            options={
                'db_table': 'cir_record_compound_association_type',
            },
        ),
        migrations.CreateModel(
            name='Name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=1500, unique=True)),
            ],
            options={
                'db_table': 'cir_structure_name',
            },
        ),
        migrations.CreateModel(
            name='NameType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string', models.CharField(max_length=64, unique=True)),
                ('public_string', models.TextField(max_length=64)),
                ('description', models.TextField(blank=True, max_length=768, null=True)),
            ],
            options={
                'db_table': 'cir_name_type',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(default=1)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='database.database')),
                ('regid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='structure.name')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.release')),
                ('structure_file_record', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='records', to='etl.structurefilerecord')),
            ],
            options={
                'db_table': 'cir_record',
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashisy', custom.fields.CactvsHashField(unique=True)),
                ('minimol', custom.fields.CactvsMinimolField()),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('blocked', models.DateTimeField(blank=True, null=True)),
                ('ficts_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ficts_children', to='structure.structure')),
                ('ficus_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ficus_children', to='structure.structure')),
            ],
            options={
                'verbose_name': 'Structure',
                'verbose_name_plural': 'Structures',
                'db_table': 'cir_structure',
            },
        ),
        migrations.CreateModel(
            name='StructureFormula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formula', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'cir_structure_formula',
            },
        ),
        migrations.CreateModel(
            name='UsageMonth',
            fields=[
                ('month_year', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('requests', models.IntegerField()),
                ('ip_counts', models.IntegerField()),
                ('average', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'cir_usage_month',
            },
        ),
        migrations.CreateModel(
            name='UsageMonthDay',
            fields=[
                ('month_day', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('month', models.IntegerField()),
                ('day', models.IntegerField()),
                ('requests', models.IntegerField()),
                ('ip_counts', models.IntegerField()),
            ],
            options={
                'db_table': 'cir_usage_month_day',
            },
        ),
        migrations.CreateModel(
            name='UsageSeconds',
            fields=[
                ('requests', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'cir_usage_seconds',
            },
        ),
        migrations.CreateModel(
            name='StructureNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.name')),
                ('name_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.nametype')),
                ('structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.structure')),
            ],
            options={
                'db_table': 'cir_structure_names',
            },
        ),
        migrations.CreateModel(
            name='StructureInChIs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inchi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resolver.inchi')),
                ('structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.structure')),
            ],
            options={
                'db_table': 'cir_structure_inchis',
            },
        ),
        migrations.AddField(
            model_name='structure',
            name='inchis',
            field=models.ManyToManyField(related_name='structures', through='structure.StructureInChIs', to='resolver.InChI'),
        ),
        migrations.AddField(
            model_name='structure',
            name='names',
            field=models.ManyToManyField(related_name='structures', through='structure.StructureNames', to='structure.Name'),
        ),
        migrations.AddField(
            model_name='structure',
            name='uuuuu_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='uuuuu_children', to='structure.structure'),
        ),
        migrations.CreateModel(
            name='ResponseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=128)),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
                ('parameter', models.CharField(blank=True, max_length=1024, null=True)),
                ('base_mime_type', models.CharField(max_length=255)),
                ('parent_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='structure.responsetype')),
            ],
            options={
                'verbose_name': 'Response Type',
                'verbose_name_plural': 'Response Types',
                'db_table': 'cir_response_type',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fromString', models.TextField()),
                ('response', models.TextField(db_column='string')),
                ('responseFile', models.FileField(max_length=255, upload_to='tmp')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.responsetype')),
            ],
            options={
                'db_table': 'cir_response',
            },
        ),
        migrations.CreateModel(
            name='RecordNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.name')),
                ('name_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.nametype')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.record')),
            ],
            options={
                'db_table': 'cir_record_names',
            },
        ),
        migrations.CreateModel(
            name='Compound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('blocked', models.DateTimeField(blank=True, null=True)),
                ('structure', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='structure.structure')),
            ],
            options={
                'db_table': 'cir_compound',
            },
        ),
        migrations.CreateModel(
            name='Association',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compound', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_associations', to='structure.compound')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compound_associations', to='structure.record')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.associationtype')),
            ],
            options={
                'db_table': 'cir_record_compound_associations',
            },
        ),
        migrations.CreateModel(
            name='AccessHostOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.accesshost')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.accessorganization')),
            ],
            options={
                'db_table': 'cir_access_host_organization',
            },
        ),
        migrations.AddField(
            model_name='accesshost',
            name='organization',
            field=models.ManyToManyField(through='structure.AccessHostOrganization', to='structure.AccessOrganization'),
        ),
        migrations.CreateModel(
            name='Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True, db_column='dateTime')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.accessclient')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.accesshost')),
            ],
            options={
                'db_table': 'cir_access',
            },
        ),
        migrations.AddConstraint(
            model_name='structurenames',
            constraint=models.UniqueConstraint(fields=('name', 'structure', 'name_type'), name='unique_structure_names'),
        ),
        migrations.AddConstraint(
            model_name='recordnames',
            constraint=models.UniqueConstraint(fields=('name', 'record', 'name_type'), name='unique_record_names'),
        ),
        migrations.AddConstraint(
            model_name='record',
            constraint=models.UniqueConstraint(fields=('regid', 'version', 'release'), name='unique_record'),
        ),
        migrations.AlterUniqueTogether(
            name='accesshostorganization',
            unique_together={('host', 'organization')},
        ),
    ]
