version: '3.9'

services:

  cirx:
    image: ${APP_NAME}:${APP_VERSION}
    container_name: ${APP_NAME}
    volumes:
      - ${APP_HOME}:/home/app
      - ${APP_HOME}/nginx:/home/nginx
      - ${APP_FILESTORE}:/filestore
    ports:
      - ${APP_CONNECTION_PORT}:80
    networks:
      - app_network
    environment:
      - APP_NAME
      - APP_VERSION
      - APP_UID
      - APP_GID
      - APP_VIRTUAL_HOSTNAME
      - POSTGRES_USER
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_PASSWORD
      - DJANGO_SUPERUSER_USERNAME
      - DJANGO_SUPERUSER_PASSWORD
      - DJANGO_SUPERUSER_EMAIL
      - VIRTUAL_HOST=${APP_VIRTUAL_HOSTNAME}
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
      - LETSENCRYPT_HOST
      - LETSENCRYPT_EMAIL
      - LETSENCRYPT_TEST
    depends_on:
      - cirx-postgres
    entrypoint: [ "/home/app/docker-entrypoint.sh" ]
    command: [ "/home/nginx/run.sh" ]

  cirx-postgres:
    image: postgres:13-bullseye
    container_name: ${APP_NAME}-postgres
    volumes:
      - ${APP_HOME}:/home/app
      - postgres_db_volume:/var/lib/postgresql
    ports:
      - "5432:5432"
    networks:
      - app_network
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER

  cirx-cache:
    image: redis:6.2-bullseye
    container_name: ${APP_NAME}-cache
    restart: always
    #ports:
    #  - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning #--requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache_volume:/data
    networks:
      - app_network

  cirx-flower:
    image: mher/flower
    container_name: ${APP_NAME}-flower
    environment:
      - CELERY_BROKER_URL=redis://cirx-cache
      - CELERY_RESULT_BACKEND=redis://cirx-cache
      - FLOWER_PORT=8888
    ports:
      - 8888:8888
    depends_on:
      - cirx-cache
      - cirx-worker1
    networks:
      - app_network

  cirx-worker1:
    image: ${APP_NAME}:${APP_VERSION}
    container_name: ${APP_NAME}-worker1
    volumes: &worker_volumes
      - ${APP_HOME}:/home/app
      - ${APP_HOME}/logging:/logging
      #- ${APP_HOME}/pids:/pids
      - ${APP_FILESTORE}:/filestore
    networks:
      - app_network
    environment: &worker_env
      - APP_NAME
      - APP_VERSION
      - APP_UID
      - APP_GID
      - APP_VIRTUAL_HOSTNAME
      - POSTGRES_USER
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_PASSWORD
      - VIRTUAL_HOST=${APP_VIRTUAL_HOSTNAME}
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
    entrypoint: [ "/home/app/docker-entrypoint.worker.sh" ]
    working_dir: "/home/app/appsite"
    command: [ 'celery', '-A', 'appsite', 'worker', '-l', 'info', '-c', '3', "--logfile=/logging/cirx-worker1.%h.%i.log" ]
    restart: on-failure
    depends_on:
      - cirx-cache

volumes:
  postgres_db_volume:
    name: ${APP_NAME}-postgres-db-volume
  cache_volume:
    driver: local

networks:
  app_network:
    external:
      name: ${APP_NAME}-backend


